# -*- coding: utf-8 -*-
"""21.11.4035_PraktikumEliminasiGJ.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17docixf9QeLJOxcCxguFRFQISyLoeOZM
"""

# Nama : Parno Husi
# NIM : 21.11.4035
# Kelompok : 8
# Kelas : 21 IF 03

# Import library numpy
import numpy as np

# Fungsi untuk memasukkan matriks dari pengguna
def inputMatrix():
    n = int(input("Masukkan jumlah baris: "))  # Meminta jumlah baris dari pengguna
    m = int(input("Masukkan jumlah kolom: "))  # Meminta jumlah kolom dari pengguna

    # Inisialisasi matriks A dengan ukuran n x (m+1)
    # Kita menambahkan 1 kolom ekstra untuk vektor hasil
    A = np.zeros((n, m), dtype=float)

    # Meminta input untuk matriks A
    print("Masukkan elemen-elemen matriks A:")
    for i in range(n):
        for j in range(m):
            A[i, j] = float(input(f"Masukkan elemen A[{i+1}][{j+1}]: "))

    return A

# Menggunakan fungsi inputMatrix() untuk mengisi matriks A
A = inputMatrix()

print("Matriks A")
print("A = ", A)

n = len(A)

# Inisialisasi matriks m sebagai matriks faktor pembagi
m = np.zeros((n, n))

# Eliminasi Gauss
for i in range(0, n):
    for j in range(i+1, n):
        # Menghitung faktor pembagi matriks
        m[j][i] = A[j][i] / A[i][i]
        s = m[j][i]

        # Mengurangkan baris matriks A dengan faktor pembagi
        for k in range(0, n+1):
            A[j][k] = A[j][k] - s * A[i][k]

# Menampilkan hasil elinasi Gauss
print("")
print("Gauss")
print(A)
print("")

# Eliminasi Jordan
for i in range(n - 1, -1, -1):
    for j in range(i - 1, -1, -1):
        # Menghitung faktor pembagi matriks
        m[j][i] = A[j][i] / A[i][i]
        s = m[j][i]

        # Mengurangkan baris matriks A dengan faktor pembagi
        for k in range(n + 1):
            A[j][k] = A[j][k] - s * A[i][k]

# Menampilkan hasil eliminasi jordan
print("Jordan")
print(A)
print("")
print("")
print("Matrik Segitiga")
print(A)

# Inisialisasi vektor solusi x
x = np.zeros((n, 1))
x[n-1][0] = A[n-1][n] / A[n-1][n-1]

# Penyelesaian substitusi mundur
for i in range(n-2, -1, -1):
    s = 0
    for j in range(i+1, n):
        s = s + A[i][j] * x[j][0]

    # Menghitung solusi untuk variabel xi
    x[i][0] = (A[i][n] - s) / A[i][i]

# Menampilkan hasil
print("\nPenyelesaian", x)